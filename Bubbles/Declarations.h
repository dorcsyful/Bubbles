#pragma once
//Gameplay
#define GRAVITY (-19.f)

#define NAIL_LENGTH 0.3f
#define NAIL_WEIGHT 0.3f
#define NOMINMAX

#include <map>

enum class EGAME_STATE
{
	STATE_START,
	STATE_PLAY,
	STATE_GAME_OVER_ANIMATION,
	STATE_GAME_OVER,
	STATE_MENU,
	STATE_LOADING,
	STATE_HIGH_SCORE,
	STATE_EXIT_CONFIRM,
	STATE_RESTART_CONFIRM,
	STATE_MENU_CONFIRM,
	STATE_SETTINGS,
	STATE_SETTINGS_CONFIRM,
	STATE_RESTART,
	STATE_TUTORIAL_ONE,
	STATE_TUTORIAL_TWO
};

enum class EOBJECT_TYPE
{
	TYPE_NO_TYPE,
	TYPE_LINE,
	TYPE_CIRCLE,
	TYPE_NAIL
};

enum class EBUBBLE_TYPE
{
	TYPE_STAR = 0,
	TYPE_CRAB = 1,
	TYPE_FISH = 2,
	TYPE_FROG = 3,
	TYPE_JELLY = 4,
	TYPE_KRILL = 5,
	TYPE_SEAL = 6,
	TYPE_SHARK = 7,
	TYPE_SQUID = 8,
	TYPE_WHALE = 9,
	TYPE_BATH_BOMB = 10,
	TYPE_SPIKY_BOMB = 11,
	TYPE_NULL = 12
};

static const std::map<EBUBBLE_TYPE, float> bubble_weights = { {EBUBBLE_TYPE::TYPE_STAR, 20}, {EBUBBLE_TYPE::TYPE_CRAB, 30}, {EBUBBLE_TYPE::TYPE_FISH, 40},
												   {EBUBBLE_TYPE::TYPE_FROG, 50},{EBUBBLE_TYPE::TYPE_JELLY, 60}, {EBUBBLE_TYPE::TYPE_KRILL, 70},
															{EBUBBLE_TYPE::TYPE_SEAL, 80}, {EBUBBLE_TYPE::TYPE_SHARK, 90}, {EBUBBLE_TYPE::TYPE_SQUID, 100},
												   {EBUBBLE_TYPE::TYPE_WHALE, 110}, {EBUBBLE_TYPE::TYPE_BATH_BOMB,120}, {EBUBBLE_TYPE::TYPE_SPIKY_BOMB,130} };